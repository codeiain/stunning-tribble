version: '3.3'

volumes:
    prometheus_data: {}
    grafana_data: {}

services:
    mapserver:
        tty: true
        build: 
            context: map-server
            dockerfile: Dockerfile
        ports:
            - 8000:8000
        restart: always
        depends_on:
            - couchbase
            - prometheus
            - grafana
    
    websocketgateway:
        tty: true
        build: 
            context: websocket-gateway
            dockerfile: Dockerfile
        ports:
            - 8001:8001
        restart: always
        depends_on:
            - couchbase
            - prometheus
            - grafana

    sonarcouldexporter:
        tty: true
        image: whyeasy/sonarcloud-exporter:latest
        ports:
            - 9999:9999
        restart: always
        environment:
            - SC_ORGANIZATION=codeiain-1
            - SC_TOKEN=20c1374022ed254e996e3f0dd90ff64b5bb92b3e
            - LISTEN_ADDRESS=9999
        depends_on:
            - prometheus
            - grafana
    couchbase:
        tty: true
        image: couchbase/server
        deploy:
            replicas: 1
        restart: always
        ports:
            - 8091:8091
            - 8092:8092
            - 8093:8093
            - 8094:8094
            - 11210:11210
        volumes:
            - "./setup-couchbase.sh:/opt/couchbase/setup-couchbase.sh"
            - "./mapTestData.json:/opt/couchbase/mapTestData.json"
        command: 
            - /opt/couchbase/setup-couchbase.sh

    prometheus:
        image: prom/prometheus
        volumes:
            - ./infra/prometheus/:/etc/prometheus/
            - prometheus_data:/prometheus
        command:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus'
            - '--web.console.libraries=/usr/share/prometheus/console_libraries'
            - '--web.console.templates=/usr/share/prometheus/consoles'
            - '--web.enable-lifecycle'
            - '--web.enable-admin-api'
        ports:
            - 9090:9090
        depends_on:
            - cadvisor
    #      - pushgateway
        deploy:
            placement:
                constraints:
                    - node.role==manager
            restart_policy:
                condition: on-failure

    node-exporter:
        image: prom/node-exporter
        container_name: node-exporter
        restart: unless-stopped
        volumes:
            - /proc:/host/proc:ro
            - /sys:/host/sys:ro
            - /:/rootfs:ro
        command:
            - '--path.procfs=/host/proc'
            - '--path.rootfs=/rootfs'
            - '--path.sysfs=/host/sys'
            - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
        expose:
            - 9100


    alertmanager:
        image: prom/alertmanager
        ports:
            - 9093:9093
        volumes:
            - "./infra/alertmanager/:/etc/alertmanager/"
        command:
            - '--config.file=/etc/alertmanager/config.yml'
            - '--storage.path=/alertmanager'
        deploy:
            placement:
                constraints:
                    - node.role==manager
            restart_policy:
                condition: on-failure    

    cadvisor:
        image: gcr.io/cadvisor/cadvisor
        volumes:
            - /:/rootfs:ro
            - /var/run:/var/run:rw
            - /sys:/sys:ro
            - /var/lib/docker/:/var/lib/docker:ro
        ports:
            - 8080:8080
        deploy:
            mode: global
            restart_policy:
                condition: on-failure
    grafana:
        image: grafana/grafana
        depends_on:
            - prometheus
        ports:
            - 3000:3000
        volumes:
            - ./infra/grafana/provisioning/:/etc/grafana/provisioning/
        env_file:
            - ./infra/grafana/config.monitoring
        user: "472"
        deploy:
            placement:
                constraints:
                - node.role==manager
            restart_policy:
                condition: on-failure